library(here)
output_floc <- "binned_data"
dir.create(
output_floc,
recursive = TRUE,
showWarnings = FALSE
)
getwd()
setwd("\\\\wsl.localhost/Ubuntu/home/sstrawha/ALS_GWAS_Pipeline/r_scripts/plotting")
num_chromosomes <- 22
floc <- here("summary_statistics_tmic_ps")
rm(list = ls())
# load packages
suppressPackageStartupMessages(library(here))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(tidyverse))
source("~/.active-rstudio-document", echo = TRUE)
num_chromosomes <- 22
floc <- here("summary_statistics_tmic_ps")
snps_store <- list()
for (chrom_idx in 1:num_chromosomes) {
faddress <- here(
floc,
paste0("als.sumstats.lmm.chr", chrom_idx, ".tmic.ps.csv")
)
snps_store[[chrom_idx]] <- fread(faddress)
}
snps_store <- rbindlist(snps_store)
# separate by mutation class
mut_classes <- c(
"m6a_lof",
"m6a_gof",
"m5c_lof",
"other"
)
classes_store <-l list()
# separate by mutation class
mut_classes <- c(
"m6a_lof",
"m6a_gof",
"m5c_lof",
"other"
)
classes_store <- list()
for (class in mut_class) {
classes_store[[class]] <- filter(snps_store, mut_cat == class)
}
# separate by mutation class
mut_classes <- c(
"m6a_lof",
"m6a_gof",
"m5c_lof",
"other"
)
classes_store <- list()
for (class in mut_classes) {
classes_store[[class]] <- filter(snps_store, mut_cat == class)
}
?unique
?unique
num_chromosomes <- 22
floc <- here("summary_statistics_tmic_ps")
snps_store <- list()
# read data
for (chrom_idx in 1:num_chromosomes) {
faddress <- here(
floc,
paste0("als.sumstats.lmm.chr", chrom_idx, ".tmic.ps.csv")
)
snps_store[[chrom_idx]] <- fread(faddress)
}
snps_store <- rbindlist(snps_store)
# separate by mutation class
mut_classes <- c(
"m6a_lof",
"m6a_gof",
"m5c_lof",
"other"
)
classes_store <- list()
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- filter(snps_to_store, !(hgnc_symbol == "none" || tmic_l2fc == "none"))
snps_to_store <- snps_to_store[unique(snps_to_store$hgnc_symbol), ]
classes_store[[class]] <- snps_to_store
}
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store[!(snps_to_store$hgnc_symbol == "none" || snps_to_store$tmic_l2fc == "none")), ]
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store[!(snps_to_store$hgnc_symbol == "none" || snps_to_store$tmic_l2fc == "none"), ]
snps_to_store <- snps_to_store[unique(snps_to_store$hgnc_symbol), ]
classes_store[[class]] <- snps_to_store
}
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store %>%
filter(hgnc_symbol != "none", tmic_l2fc != "none") %>%
mutate(tmic_l2fc = as.numeric(tmic_l2fc))
snps_to_store <- snps_to_store %>%
distinct(hgnc_symbol, .keep_all = TRUE)
classes_store[[class]] <- snps_to_store
}
View(classes_store)
BiocManager::install("EnhancedVolcano")
suppressPackageStartupMessages(library(EnhancedVolcano))
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store %>%
filter(hgnc_symbol != "none", tmic_l2fc != "none") %>%
mutate(tmic_l2fc = as.numeric(tmic_l2fc))
snps_to_store <- snps_to_store %>%
distinct(hgnc_symbol, .keep_all = TRUE)
data_to_store <- data.frame(
Gene = snps_to_store$hgnc_symbol,
log2FC = snps_to_store$tmic_l2fc,
p_value = snps_to_store$tmic_p
)
classes_store[[class]] <- snps_to_store
}
?ggsave
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p-value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
ggsave(paste0("volcano_plot_", class, ".png"), plot = plt)
}
num_chromosomes <- 22
floc <- here("summary_statistics_tmic_ps")
snps_store <- list()
# read data
for (chrom_idx in 1:num_chromosomes) {
faddress <- here(
floc,
paste0("als.sumstats.lmm.chr", chrom_idx, ".tmic.ps.csv")
)
snps_store[[chrom_idx]] <- fread(faddress)
}
snps_store <- rbindlist(snps_store)
# separate by mutation class
mut_classes <- c(
"m6a_lof",
"m6a_gof",
"m5c_lof",
"other"
)
mut_names <- c(
"m6A LoF",
"m6A GoF",
"m5C LoF",
"Other"
)
names(mut_names) <- mut_classes
classes_store <- list()
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store %>%
filter(hgnc_symbol != "none", tmic_l2fc != "none") %>%
mutate(tmic_l2fc = as.numeric(tmic_l2fc))
snps_to_store <- snps_to_store %>%
distinct(hgnc_symbol, .keep_all = TRUE)
data_to_store <- data.frame(
Gene = snps_to_store$hgnc_symbol,
log2FC = snps_to_store$tmic_l2fc,
p_value = snps_to_store$tmic_p
)
classes_store[[class]] <- snps_to_store
}
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p-value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
ggsave(paste0("volcano_plot_", class, ".png"), plot = plt)
}
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store %>%
filter(hgnc_symbol != "none", tmic_l2fc != "none") %>%
mutate(tmic_l2fc = as.numeric(tmic_l2fc))
snps_to_store <- snps_to_store %>%
distinct(hgnc_symbol, .keep_all = TRUE)
data_to_store <- data.frame(
Gene = snps_to_store$hgnc_symbol,
log2FC = as.numeric(snps_to_store$tmic_l2fc),
p_value = as.numeric(snps_to_store$tmic_p)
)
classes_store[[class]] <- snps_to_store
}
View(snps_store)
View(data_to_store)
View(snps_store)
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store %>%
filter(hgnc_symbol != "none", tmic_l2fc != "none", tmic_p =! "none") %>%
mutate(tmic_l2fc = as.numeric(tmic_l2fc))
snps_to_store <- snps_to_store %>%
distinct(hgnc_symbol, .keep_all = TRUE)
data_to_store <- data.frame(
Gene = snps_to_store$hgnc_symbol,
log2FC = as.numeric(snps_to_store$tmic_l2fc),
p_value = as.numeric(snps_to_store$tmic_p)
)
classes_store[[class]] <- snps_to_store
}
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store %>%
filter(hgnc_symbol != "none", tmic_l2fc != "none", tmic_p != "none") %>%
mutate(tmic_l2fc = as.numeric(tmic_l2fc))
snps_to_store <- snps_to_store %>%
distinct(hgnc_symbol, .keep_all = TRUE)
data_to_store <- data.frame(
Gene = snps_to_store$hgnc_symbol,
log2FC = as.numeric(snps_to_store$tmic_l2fc),
p_value = as.numeric(snps_to_store$tmic_p)
)
classes_store[[class]] <- snps_to_store
}
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p-value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
ggsave(paste0("volcano_plot_", class, ".png"), plot = plt)
}
view(classes_store$m6a_lof)
typeof(classes_store$m6a_lof$tmic_p)
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store %>%
filter(hgnc_symbol != "none", tmic_l2fc != "none", tmic_p != "none") %>%
mutate(tmic_l2fc = as.numeric(tmic_l2fc))
snps_to_store <- snps_to_store %>%
distinct(hgnc_symbol, .keep_all = TRUE)
data_to_store <- data.frame(
Gene = snps_to_store$hgnc_symbol,
log2FC = as.numeric(snps_to_store$tmic_l2fc),
p_value = as.numeric(snps_to_store$tmic_p)
)
classes_store[[class]] <- data_to_store
}
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p-value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
ggsave(paste0("volcano_plot_", class, ".png"), plot = plt)
}
typeof(classes_store$m6a_lof$p_value)
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p_value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
ggsave(paste0("volcano_plot_", class, ".png"), plot = plt)
}
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p_value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
ggsave(
file = here("outputs", paste0("volcano_plot_", class, ".png")),
plot = plt
)
}
?ggsave
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p_value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
ggsave(
file = here("outputs", paste0("volcano_plot_", class, ".png")),
plot = plt,
width = 10,
height = 8
)
}
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p_value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 1.0,
labSize = 3.0)
ggsave(
file = here("outputs", paste0("volcano_plot_", class, ".png")),
plot = plt,
width = 10,
height = 8
)
}
for (class in mut_classes) {
# only pull snps with gene symbols and tmic data
snps_to_store <- filter(snps_store, mut_cat == class)
snps_to_store <- snps_to_store %>%
filter(hgnc_symbol != "none", tmic_l2fc != "none", tmic_p != "none") %>%
mutate(tmic_l2fc = as.numeric(tmic_l2fc))
snps_to_store <- snps_to_store %>%
distinct(hgnc_symbol, .keep_all = TRUE) %>%
filter(p < 0.05)
data_to_store <- data.frame(
Gene = snps_to_store$hgnc_symbol,
log2FC = as.numeric(snps_to_store$tmic_l2fc),
p_value = as.numeric(snps_to_store$tmic_p)
)
classes_store[[class]] <- data_to_store
}
# create plots
for (class in mut_classes) {
current_data <- classes_store[[class]]
name <- mut_names[[class]]
plt <- EnhancedVolcano(current_data,
lab = current_data$Gene,
x = "log2FC",
y = "p_value",
title = paste("Volcano Plot of Differential Expression for", name),
pCutoff = 0.05,
FCcutoff = 1,
pointSize = 1.0,
labSize = 3.0)
ggsave(
file = here("outputs", paste0("volcano_plot_", class, ".png")),
plot = plt,
width = 10,
height = 8
)
}
source("//wsl.localhost/Ubuntu/home/sstrawha/ALS_GWAS_Pipeline/r_scripts/plotting/volcano_plot.R", echo = TRUE)
